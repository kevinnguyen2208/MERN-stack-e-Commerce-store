{"ast":null,"code":"import axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      data\n    } = axios.get(`/api/users/${userId}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register, detailsUser };","map":{"version":3,"sources":["/Users/kevinnguyen/Desktop/assignment3/frontend/src/actions/userActions.js"],"names":["axios","Cookie","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","detailsUser","userId","getState","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\n\nconst signin = (email,password)=>async(dispatch)=>{\n    dispatch({type:USER_SIGNIN_REQUEST,payload:{email,password}});\n    try{\n        const{data} = await axios.post('/api/users/signin', {email,password});\n        dispatch({type:USER_SIGNIN_SUCCESS,payload:data});\n        Cookie.set('userInfo',JSON.stringify(data));\n    }catch(error){\n        dispatch({type:USER_SIGNIN_FAIL,payload:error.message});\n    }\n}\n\nconst register = (name, email, password) => async (dispatch) => {\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\n    try {\n      const { data } = await axios.post(\"/api/users/register\", { name, email, password });\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n      Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error) {\n      dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\n    }\n}\nconst detailsUser = (userId) => async (dispatch,getState) =>{\n  dispatch({type:USER_DETAILS_REQUEST,payload:userId});\n  try{\n    const {data} = axios.get(`/api/users/${userId}`);\n    dispatch({type:USER_DETAILS_SUCCESS,payload:data});\n  }catch(error) {\n    dispatch({ type: USER_DETAILS_FAIL, payload: error.message });\n  }\n}\n\nexport{signin,register, detailsUser};\n"]},"metadata":{},"sourceType":"module"}